# This is a standard, mixed precision build

# determine OS
ifeq ($(OS), Windows_NT)
	detected_OS = Windows
	ARC	= WINDOWS
else
	detected_OS = $(shell sh -c 'uname 2>/dev/null || echo Unknown')
	ARC = LINUX
endif

# use GNU compilers if defined compilers do not exist
ifeq ($(detected_OS), Windows)
	WHICH = where
else
	WHICH = which
endif
ifeq (, $(shell $(WHICH) $(FC)))
	FC = gfortran
endif
ifeq (, $(shell $(WHICH) $(CC)))
  CC = gcc
endif

# set fortran compiler to gfortran if not passed on the command line
ifneq ($(origin FC), "command line")
	ifneq ($(FC), gfortran)
		FC = gfortran
	endif
endif
# set c compiler to gcc if not passed on the command line
ifneq ($(origin CC), "command line")
	ifneq ($(CC), gcc)
		CC = gcc
	endif
endif

$(info    ----------------)
$(info    FC is $(FC))
$(info    CC is $(CC))
$(info    DBL_PREC is false)
$(info    ----------------)
$(info    )

#-------------------------------------------------------------------
#-------------------------------------------------------------------

MMFDIR      = ./mmf
PRMSDIR     = ./prms
BINDIR      = ./bin
MMFLIB      = .$(MMFDIR)/libmmf.a

#########################################################
# Configure tags for each system
##########################################################

ifeq ($(detected_OS), Windows)
	ifeq ($(FC), $(filter $(FC), gfortran))
		OPTLEVEL = -O -static
		LDFLAGS = $(OPTLEVEL)
	endif
else
	ifeq ($(FC), gfortran)
		OPTLEVEL = -O
		LDFLAGS = $(OPTLEVEL)
	endif
	ifeq ($(FC), $(filter $(FC), ifort mpiifort))
		OPTLEVEL = -O2
		LDFLAGS = $(OPTLEVEL) -static-intel -nofor-main
	endif
endif

##########################################################
# Define the Fortran compile flags
##########################################################
# set the fortran flags
ifeq ($(detected_OS), Windows)
	ifeq ($(FC), gfortran)
		FFLAGS = $(OPTLEVEL) -fno-second-underscore -fallow-argument-mismatch
	endif
else
	ifeq ($(FC), gfortran)
		FFLAGS = $(OPTLEVEL) -fno-second-underscore -fallow-argument-mismatch
	endif
	ifeq ($(FC), $(filter $(FC), ifort mpiifort))
		FFLAGS = -fp-model source
	endif
endif

##########################################################
# Define the C compile flags
# -D_UF defines UNIX naming conventions for mixed language compilation.
##########################################################
# set the C flags
ifeq ($(detected_OS), Windows)
	ifeq ($(CC), gcc)
		CFLAGS = $(OPTLEVEL) -D$(ARC) -D_UF -Wall
	endif
else
	ifeq ($(CC), gcc)
		CFLAGS = $(OPTLEVEL) -D$(ARC) -D_UF -Wall
	endif
	ifeq ($(CC), $(filter $(CC), icc mpiicc))
		CFLAGS = $(OPTLEVEL) -D$(ARC) -D_UF -Wall
	endif
endif

##########################################################
# Define the libraries
##########################################################
ifeq ($(detected_OS), Windows)
	ifeq ($(FC), gfortran)
		MATHLIB	= -lm
		GCLIB = -lgfortran -lgcc $(MATHLIB)
	endif
else
	ifeq ($(FC), gfortran)
		MATHLIB	= -lm
		GCLIB = $(MATHLIB)
	endif
	ifeq ($(FC), $(filter $(FC), icc mpiicc))
		MATHLIB	=
		GCLIB =
	endif
endif
FLIBS = $(GCLIB)

##########################################################
# Unix system commands
##########################################################
RM = rm -f
AR = ar ruv
RANLIB = ranlib
MAKE = make
#LN	= ln -s
LN = cp
CD = cd
CP = cp
