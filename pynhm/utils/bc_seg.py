# This utility formats input (forcing/boundary condition) data for
# pynhm.PRMSChannel into a format readable by EC Watershed (at least initially
# until the existing netcdf files work
#

# Target/example output >>>>

# File generated by Flopy verion x.x.x on dd/dd/dddd at tt:tt:tt.
# BEGIN options
#   PRINT_INPUT
#   PRINT_FLOWS
# END options

# BEGIN dimensions
#   MAXBOUND 1
# END dimensions

# BEGIN period 1
#   1      1.00000000
# END period 1

# <<<< Target/example output

# JLM Comments on above
# 1. Loss of actual time for use of period index is NOT desirable: V BAD
# 2. Loss of spatial identifer for spatial index id NOT desirable: BAD
# 3. Can metadata be included in the file (e.g. with comments)? E.G. what
#    are the units, what is the variable name? What are the dimension names of
#    the input variable?

from ..constants import fileish
from .parameters import PrmsParameters
from .mf6_file_writer import mf6_file_writer

idt = " " * 2  # indent is 2 spaces in output file

required = [
    "options",
    "maxbound",
]

bc_struct = {
    "options": {
        "print_input": None,
        "print_flows": None,
        "save_flows": None,
    },
    "dimensions": {
        "maxbound": "scalar",
    },
    "period": {},
}


class BcSeg:
    """Write PRMS time varying boundary conditions (forcing files) as input
    files for the EC channel segment model (actual name?)

    MuskingumMann (a prototype physics and model or package name) will be a
    new model with its own spatial discretization in the MF 6 "NAM" file. This
    is undocumented at this time. This model will accept various input packages
    that read the filesgenerated by this Class/routine.

    Args:
      param_file: The filepath to PRMS domain parameters.
      params: a PrmsParameters object (already loaded from file)
      length_units: only meters accepted for now (default)
      output_file: the output file to write.

    TODOS:
        Do we manage unit conversions? Will mandate meters for now
        Is there a way to test that this is a conforming file in mf6?
        Non-contiguous polygons for HRUs.

    Examples
    --------

    import pathlib as pl
    from pynhm.utils import BcSeg
    # gwres_flow_vol.nc, sroff_vol.nc, ssres_flow_vol.nc
    netcdf_bc_file = pl.Path(
        "/Users/jamesmcc/usgs/pynhm/test_data/drb_2yr/output",
        "gwres_flow_vol.nc")
    param_file = pl.Path(
        "/Users/jamesmcc/usgs/pynhm/test_data/drb_2yr/myparam.param")
    output_bc_file = pl.Path(".") / "bc_seg_example_file.mf6"
    bc_seg = BcSeg(
        netcdf_bc_file,
        param_file=param_file,
        output_file=output_bc_file)

    """

    def __init__(
        self,
        netcdf_bc_file: fileish,
        param_file: fileish = None,
        params: PrmsParameters = None,
        output_file: fileish = None,
        **kwargs,
    ):

        # read the parameter file just for the number of segments
        self._param_file = param_file
        self.params = params
        if (param_file is not None) and (params is not None):
            msg = "Can only specify one of param_file or params"
            raise ValueError(msg)
        elif (param_file is None) and (params is None):
            msg = "Must specify (exactly) one of param_file or params"
            raise ValueError(msg)
        elif param_file:
            self.params = PrmsParameters.load(param_file)

        self.maxbound = self.params.parameters["nsegment"]

        # OPTIONS BLOCK
        # Get kwargs for these? default to false.
        opts = bc_struct["options"]
        for kk, vv in opts.items():
            if kk in kwargs.keys():
                setattr(self, kk, True)

        return

    def write(self, out_file: fileish = None):
        if out_file:
            self.output_file = out_file

        if self.output_file:
            mf6_file_writer(
                self,
                file_struct=bc_struct,
                required=required,
                output_file=self.output_file,
            )
        else:
            print(
                "No output file (self.disu_file)  has been set for this "
                "DisHru object, no output written."
            )
